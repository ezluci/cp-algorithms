{
	// Place your cpp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
   
   "Nou template pentru consola": {
      "scope": "cpp",
      "prefix": "cnew",
      "body": [
         "#ifdef EZ",
         "   #include \"./ez/ez.h\"",
         "#else",
         "   #include <bits/stdc++.h>",
         "#endif",
         "#define mp make_pair",
         "#define mt make_tuple",
         "#define ll long long",
         "#define pb push_back",
         "#define eb emplace_back",
         "#define fi first",
         "#define se second",
         "using namespace std;",
         "void EZinit() {",
         "   #ifndef EZ",
         "   cin.tie(0)->sync_with_stdio(0);",
         "   #endif",
         "}",
         "",
         "",
         "",
         "int main()",
         "{",
         "   EZinit();",
         "   ",
         "   $0",
         "}"
      ]
   },

   "Nou template pentru fisier": {
      "scope": "cpp",
      "prefix": "fnew",
      "body": [
         "using namespace std;",
         "#ifdef EZ",
         "   #include \"./ez/ez.h\"",
         "   const string FILE_NAME = \"test\";",
         "#else",
         "   #include <bits/stdc++.h>",
         "   const string FILE_NAME = \"$1\";",
         "#endif",
         "#define mp make_pair",
         "#define mt make_tuple",
         "#define ll long long",
         "#define pb push_back",
         "#define eb emplace_back",
         "#define fi first",
         "#define se second",
         "#define cin fin",
         "#define cout fout",
         "ifstream fin (FILE_NAME + \".in\");",
         "ofstream fout (FILE_NAME + \".out\");",
         "",
         "",
         "",
         "int main()",
         "{",
         "   $0",
         "}"
      ]
   }
}
